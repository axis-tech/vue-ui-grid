// vgrids
@mixin vgrid-row-variant($state, $background, $border: null) {
  // Exact selectors below required to override `.vgrid-striped` and prevent
  // inheritance to nested vgrids.
  .vgrid-#{$state} {
    &,
    > th,
    > td {
      background-color: $background;
    }

    @if $border != null {
      th,
      td,
      thead th,
      tbody + tbody {
        border-color: $vgrid-border-color;
      }
    }
  }

  // Hover states for `.vgrid-hover`
  // Note: this is not available for cells or rows within `thead` or `tfoot`.
  .vgrid-hover {
    $hover-background: darken($background, 5%);

    .vgrid-#{$state} {
      @include hover {
        background-color: $hover-background;

        > td,
        > th {
          background-color: $hover-background;
        }
      }
    }
  }
}



@mixin vgrid-make-grid-columns($columns: $grid-columns, $breakpoints: $grid-breakpoints) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    // Allow columns to stretch full width below their breakpoints
    @for $i from 1 through $columns {
      .vgrid-col#{$infix}-#{$i} {
        @extend %vgrid-column;
      }
    }
    .vgrid-col#{$infix},
    .vgrid-col#{$infix}-auto {
      @extend %vgrid-column;
    }

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      // Provide basic `.col-{bp}` classes for equal-width flexbox columns
      .vgrid-col#{$infix} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }
      .vgrid-col#{$infix}-auto {
        flex: 0 0 auto;
        width: auto;
        max-width: 100%; // Reset earlier grid tiers
      }

      @for $i from 1 through $columns {
        .vgrid-col#{$infix}-#{$i} {
          @include make-col($i, $columns);
        }
      }
    }
  }
}
